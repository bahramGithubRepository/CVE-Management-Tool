package ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import services.ServiceLayer;
import dataModels.CVEObject.SettingMode;

public class UserLoginView extends JFrame implements ActionListener {

	JComboBox<String> user = new JComboBox<>(
			new String[] { SettingMode.ADMIN.toString(), SettingMode.USER.toString() });
	JPasswordField password = new JPasswordField();
	Font font = new Font("Arial", Font.PLAIN, 20);
	JButton login = new JButton("Login");
	ImageIcon loading = new ImageIcon("logo/loader.gif");
	JLabel lbLodingImage = new JLabel("", loading, JLabel.LEFT);
	JLabel lbLoding = new JLabel("Wait... ", JLabel.LEFT);
	JLabel lblWrong = new JLabel("Wrong");

	public UserLoginView() {
		setTitle("Login " + MainUI.VER);
		setLayout(null);
		setPreferredSize(new Dimension(500, 350));
		pack();
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
		getRootPane().setDefaultButton(login);
		addWindowListener(new WindowAdapter() {
			public void windowOpened(WindowEvent e) {
				password.requestFocus();
			}
		});
		initView();
	}

	/**
	 * initial Login view
	 */
	private void initView() {
		JLabel lblTitile = new JLabel("Enter your user name and password");
		lblTitile.setFont(font);
		lblTitile.setBounds(70, 20, 400, 35);

		JLabel lblUser = new JLabel("Login as");
		lblUser.setFont(font);
		lblUser.setBounds(100, 70, 100, 35);

		user.setFont(font);
		user.setPreferredSize(new Dimension(100, 50));
		user.setBounds(210, 70, 150, 35);
		user.setSelectedIndex(0);

		JLabel lblPassword = new JLabel("Password");
		lblPassword.setFont(font);
		lblPassword.setBounds(100, 120, 100, 35);
		password.setFont(font);
		password.setPreferredSize(new Dimension(100, 50));
		password.setBounds(210, 120, 150, 35);
		password.setFocusable(true);
		password.addFocusListener(new FocusListener() {

			@Override
			public void focusLost(FocusEvent e) {
			}

			@Override
			public void focusGained(FocusEvent e) {
				lblWrong.setVisible(false);

			}
		});
		lblWrong.setFont(font);
		lblWrong.setForeground(Color.red);
		lblWrong.setBounds(370, 120, 70, 35);
		lblWrong.setVisible(false);
		login.setFont(font);
		login.addActionListener(this);
		login.setBounds(100, 170, 100, 35);

		add(lblTitile);
		add(lblUser);
		add(user);
		add(lblPassword);
		add(password);
		add(lblWrong);
		add(login);

		lbLodingImage.setBounds(280, 170, 50, 35);
		lbLodingImage.setVisible(false);
		lbLoding.setBounds(210, 170, 70, 35);
		lbLoding.setVisible(false);
		lbLoding.setFont(font);
		add(lbLoding);
		add(lbLodingImage);

	}

	@Override
	public void actionPerformed(ActionEvent event) {
		if (event.getSource() == login) {
			login();
		}

	}

	public static void main(String[] args) {

		new UserLoginView();

	}

	/**
	 * Action performance for Login button
	 */
	private void login() {
		
		
		lbLodingImage.setVisible(true);
		lbLoding.setVisible(true);
		Thread thread = new Thread(new Runnable() {

			@Override
			public void run() {
				ServiceLayer service = new ServiceLayer();
				if (!service.connectToDatabse()) {

					lbLoding.setText("noDatabase");
					lbLodingImage.setVisible(false);
					lbLoding.setVisible(false);

					SettingView settingView = new SettingView();
					JFrame frame = new JFrame("Settings   Standard TCP/IP");
					frame.setPreferredSize(new Dimension(800, 600));
					frame.pack();
					frame.setVisible(true);
					frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
					frame.setLocationRelativeTo(null);
					frame.add(settingView);
					setVisible(false);

				} else {
					if (service.isUserValid(SettingMode.values()[user.getSelectedIndex()].toString().toLowerCase(),
							getPassword())) {
						lbLodingImage.setVisible(false);
						lbLoding.setVisible(false);
						setVisible(false);
						java.awt.EventQueue.invokeLater(new Runnable() {
							public void run() {
								MainUI ui;
								ui = new MainUI(SettingMode.values()[user.getSelectedIndex()]);
							}
						});

					} else {
						lblWrong.setVisible(true);
						lbLodingImage.setVisible(false);
						lbLoding.setVisible(false);

					}
				}

			}
		});
		thread.start();
	}
	
	private String getPassword(){
		String str="";
		for (char ch:password.getPassword()) {
			str+=ch;
		}
		return str;
	}
}
